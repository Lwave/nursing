<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.dao.BodyInfoMapper">
  <resultMap id="BaseResultMap" type="com.ssm.entity.BodyInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="cold" jdbcType="VARCHAR" property="cold" />
    <result column="bodyAttent" jdbcType="VARCHAR" property="bodyattent" />
    <result column="chronic" jdbcType="VARCHAR" property="chronic" />
    <result column="urine" jdbcType="VARCHAR" property="urine" />
    <result column="shit" jdbcType="VARCHAR" property="shit" />
    <result column="symptom" jdbcType="VARCHAR" property="symptom" />
    <result column="tightness" jdbcType="INTEGER" property="tightness" />
    <result column="medHistory" jdbcType="VARCHAR" property="medhistory" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, weight, cold, bodyAttent, chronic, urine, shit, symptom, tightness, medHistory
  </sql>
  <select id="selectByExample" parameterType="com.ssm.entity.BodyInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bodyinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bodyinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bodyinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.entity.BodyInfoExample">
    delete from bodyinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.entity.BodyInfo">
    insert into bodyinfo (id, uid, weight, 
      cold, bodyAttent, chronic, 
      urine, shit, symptom, 
      tightness, medHistory)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, 
      #{cold,jdbcType=VARCHAR}, #{bodyattent,jdbcType=VARCHAR}, #{chronic,jdbcType=VARCHAR}, 
      #{urine,jdbcType=VARCHAR}, #{shit,jdbcType=VARCHAR}, #{symptom,jdbcType=VARCHAR}, 
      #{tightness,jdbcType=INTEGER}, #{medhistory,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.entity.BodyInfo">
    insert into bodyinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="cold != null">
        cold,
      </if>
      <if test="bodyattent != null">
        bodyAttent,
      </if>
      <if test="chronic != null">
        chronic,
      </if>
      <if test="urine != null">
        urine,
      </if>
      <if test="shit != null">
        shit,
      </if>
      <if test="symptom != null">
        symptom,
      </if>
      <if test="tightness != null">
        tightness,
      </if>
      <if test="medhistory != null">
        medHistory,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="cold != null">
        #{cold,jdbcType=VARCHAR},
      </if>
      <if test="bodyattent != null">
        #{bodyattent,jdbcType=VARCHAR},
      </if>
      <if test="chronic != null">
        #{chronic,jdbcType=VARCHAR},
      </if>
      <if test="urine != null">
        #{urine,jdbcType=VARCHAR},
      </if>
      <if test="shit != null">
        #{shit,jdbcType=VARCHAR},
      </if>
      <if test="symptom != null">
        #{symptom,jdbcType=VARCHAR},
      </if>
      <if test="tightness != null">
        #{tightness,jdbcType=INTEGER},
      </if>
      <if test="medhistory != null">
        #{medhistory,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.entity.BodyInfoExample" resultType="java.lang.Long">
    select count(*) from bodyinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bodyinfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.cold != null">
        cold = #{record.cold,jdbcType=VARCHAR},
      </if>
      <if test="record.bodyattent != null">
        bodyAttent = #{record.bodyattent,jdbcType=VARCHAR},
      </if>
      <if test="record.chronic != null">
        chronic = #{record.chronic,jdbcType=VARCHAR},
      </if>
      <if test="record.urine != null">
        urine = #{record.urine,jdbcType=VARCHAR},
      </if>
      <if test="record.shit != null">
        shit = #{record.shit,jdbcType=VARCHAR},
      </if>
      <if test="record.symptom != null">
        symptom = #{record.symptom,jdbcType=VARCHAR},
      </if>
      <if test="record.tightness != null">
        tightness = #{record.tightness,jdbcType=INTEGER},
      </if>
      <if test="record.medhistory != null">
        medHistory = #{record.medhistory,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bodyinfo
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      cold = #{record.cold,jdbcType=VARCHAR},
      bodyAttent = #{record.bodyattent,jdbcType=VARCHAR},
      chronic = #{record.chronic,jdbcType=VARCHAR},
      urine = #{record.urine,jdbcType=VARCHAR},
      shit = #{record.shit,jdbcType=VARCHAR},
      symptom = #{record.symptom,jdbcType=VARCHAR},
      tightness = #{record.tightness,jdbcType=INTEGER},
      medHistory = #{record.medhistory,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.entity.BodyInfo">
    update bodyinfo
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="cold != null">
        cold = #{cold,jdbcType=VARCHAR},
      </if>
      <if test="bodyattent != null">
        bodyAttent = #{bodyattent,jdbcType=VARCHAR},
      </if>
      <if test="chronic != null">
        chronic = #{chronic,jdbcType=VARCHAR},
      </if>
      <if test="urine != null">
        urine = #{urine,jdbcType=VARCHAR},
      </if>
      <if test="shit != null">
        shit = #{shit,jdbcType=VARCHAR},
      </if>
      <if test="symptom != null">
        symptom = #{symptom,jdbcType=VARCHAR},
      </if>
      <if test="tightness != null">
        tightness = #{tightness,jdbcType=INTEGER},
      </if>
      <if test="medhistory != null">
        medHistory = #{medhistory,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.entity.BodyInfo">
    update bodyinfo
    set uid = #{uid,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      cold = #{cold,jdbcType=VARCHAR},
      bodyAttent = #{bodyattent,jdbcType=VARCHAR},
      chronic = #{chronic,jdbcType=VARCHAR},
      urine = #{urine,jdbcType=VARCHAR},
      shit = #{shit,jdbcType=VARCHAR},
      symptom = #{symptom,jdbcType=VARCHAR},
      tightness = #{tightness,jdbcType=INTEGER},
      medHistory = #{medhistory,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>